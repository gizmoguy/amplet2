#!/bin/sh
# postinst script for amplet2
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

CONFDIR="/etc/amplet2"
CLIENTDIR="$CONFDIR/clients"
KEYDIR="$CONFDIR/keys"
LOGDIR="/var/log/amplet2"
EXAMPLEDIR="/usr/share/doc/amplet2-client/examples"
USER="amplet"

case "$1" in
    configure)
        # create the system user that will run the amp tests
        adduser --quiet --system --group --no-create-home \
                --home ${CONFDIR} ${USER}

        # Make sure keys directory exists and has the appropriate permissions
        mkdir -p ${KEYDIR}
        chmod 2750 ${KEYDIR}

        # some systems expect syslog to own the log files/directories
        mkdir -p ${LOGDIR}
        if getent passwd syslog > /dev/null; then
            chown syslog:adm ${LOGDIR}
        fi

        # some tests need special capabilities to run
        setcap 'CAP_NET_RAW=ep CAP_NET_ADMIN=ep CAP_NET_BIND_SERVICE=ep' /usr/sbin/amplet2

        setcap 'CAP_NET_RAW=ep' /usr/bin/amp-fastping
        setcap 'CAP_NET_RAW=ep' /usr/bin/amp-icmp
        setcap 'CAP_NET_RAW=ep CAP_NET_ADMIN=ep' /usr/bin/amp-tcpping
        setcap 'CAP_NET_BIND_SERVICE=ep' /usr/bin/amp-throughput
        setcap 'CAP_NET_RAW=ep' /usr/bin/amp-trace
        setcap 'CAP_NET_BIND_SERVICE=ep' /usr/bin/amp-udpstream

        # Copy the example client configuration file into place if there
        # isn't already one there. Trying to make it so everything is
        # ready to go for new users without breaking anything that might
        # already be in place.
        if [ `ls -lah ${CLIENTDIR} | grep -c "\.conf$"` -eq 0 ]; then
            ACTUAL="${CLIENTDIR}/default.conf"
            EXAMPLE="${EXAMPLEDIR}/client-example.conf"
            if [ -f ${EXAMPLE} ]; then
                cp ${EXAMPLE} ${ACTUAL}
            fi
        fi

        # the amplet user should own everything in the config directory
        chown -R ${USER}: ${CONFDIR}

        # TODO this doesn't help if the user later installs rabbitmq-server
        if dpkg -s rabbitmq-server 2>/dev/null | \
                grep -qx "Status: .* installed"; then

            # Copy a default rabbitmq configuration file into place if there
            # isn't already one there. We'll assume if there is one then the
            # user knows what they are doing.
            if [ `ls --ignore=rabbitmq-env.conf /etc/rabbitmq/ | grep -c "\.conf"` -eq 0 ]; then
                # Also check that the example config even exists as some
                # docker images strip docs (/etc/dpkg/dpkg.cfg.d/excludes)
                ACTUAL="/etc/rabbitmq/rabbitmq.config"
                EXAMPLE="${EXAMPLEDIR}/client-rabbitmq.config"
                if [ -d /etc/rabbitmq/ -a ! -f ${ACTUAL} -a -f ${EXAMPLE} ]; then
                    cp ${EXAMPLE} ${ACTUAL}
                    chown rabbitmq:rabbitmq ${ACTUAL}
                    # restart rabbitmq-server so the new config takes effect
                    if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
                        invoke-rc.d rabbitmq-server restart || exit $?
                    else
                        /etc/init.d/rabbitmq-server restart || exit $?
                    fi
                fi
            fi
        fi

        # if this is a new install or a client older than 0.7.2 it will need
        # rsyslog to be restarted as the configuration has changed
        if dpkg --compare-versions "0.7.2" gt "$2"; then
            # remove the old file if it is present
            if [ -f /etc/rsyslog.d/amplet2.conf ]; then
                rm /etc/rsyslog.d/amplet2.conf
            fi

            # restart rsyslog, we've installed a new config file for it
            if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
                invoke-rc.d rsyslog restart || exit $?
            else
                /etc/init.d/rsyslog restart || exit $?
            fi
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

# If this is an upgrade and amplet2-client is enabled, then start the client
# (which was stopped by the prerm). Debhelper won't do this for us, because
# --no-start is set.
if deb-systemd-helper debian-installed amplet2-client.service; then
    if deb-systemd-helper --quiet was-enabled amplet2-client.service; then
        invoke-rc.d amplet2-client start || exit $?
    fi
fi

exit 0
